name: CI Full

on:
  workflow_dispatch: {}
  pull_request:
    branches:
      - main

jobs:
  backend:
    name: Backend CI (unit + integration + system)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}

      - name: Build & run backend unit + integration tests
        working-directory: ./backend
        run: mvn -B verify

      - name: Start backend for system tests
        working-directory: ./backend
        run: nohup mvn -Dspring-boot.run.profiles=ci -DskipTests spring-boot:run > backend.log 2>&1 & echo $! > backend.pid

      - name: Wait for backend to be available
        run: |
          echo "Waiting for backend (http://localhost:8080)..."
          for i in {1..40}; do
            if curl -sSf http://localhost:8080/actuator/health >/dev/null 2>&1; then
              echo "Backend is up"
              break
            fi
            echo "Waiting 2s..."
            sleep 2
          done

      - name: Run backend system tests
        working-directory: ./backend
        run: mvn -B -DskipTests=false -Dtest=*IT*,*System* test

      - name: Stop backend
        if: always()
        working-directory: ./backend
        run: |
          if [ -f backend.pid ]; then
            kill $(cat backend.pid) || true
            rm -f backend.pid
          fi

  frontend:
    name: Frontend CI (unit + integration)
    runs-on: ubuntu-latest
    needs: backend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build -- --configuration=production

      - name: Run frontend unit tests
        working-directory: ./frontend
        run: npm run test:unit -- --watch=false --browsers=ChromeHeadless

      - name: Run frontend integration tests
        working-directory: ./frontend
        run: npm run test:integration -- --watch=false --browsers=ChromeHeadless
